@page "/Login"
@using Shop.Web.Services;
@inject IUserPanelService userPanelService
@using Shop.Model.CustomModels;
@inject ProtectedSessionStorage sessionStorage;
@inject NavigationManager navManager;

<style>
        .loginbox {
            text-align: center;
            width: 100%;
            margin: 20px 0px;
        }

        h1 {
            padding-top: 10px;
            font-size: 1.5em;
            color: black;
        }

        .box {
            background: white;
            width: 300px;
            border-radius: 6px;
            border: solid black;
            margin: 0px auto;
            padding: 0px 0px 20px 0px;
        }

        .text {
            background: #ffffff;
            padding: 8px;
            width: 250px;
            margin-top: 10px;
            border-radius: 5px;
            font-size: 1em;
        }

        .btn {
            margin-top: 20px;
            width: 100px;
            padding-top: 5px;
            padding-bottom: 5px;
        }
</style>

<div style="min-height:400px;">
    <div class="loginbox">
        <div class="box">
            <h1>Login</h1>
            @if (loginModel != null)
            {
                <EditForm Model="@loginModel" OnValidSubmit="Login_Click">
                    <DataAnnotationsValidator></DataAnnotationsValidator>
                    <InputText type="email" class="text" @bind-Value="loginModel.EmailId" placeholder="Enter your Email"></InputText>
                    <ValidationMessage For="@(()=>loginModel.EmailId)" />
                    <InputText type="password" class="text" @bind-Value="loginModel.Password" placeholder="Enter your Password"></InputText>
                    <ValidationMessage For="@(()=>loginModel.Password)" />
                    <input type="submit" class="btn btn-primary" value="Login" />
                    <a href="register"><div class="btn btn-success">Register</div></a>
                </EditForm>
            }
        </div>
        <div>
            <br /><br />
            <p><h4>@alertMessage</h4></p>
        </div>
    </div>
</div>



@code {

    [CascadingParameter]
    public EventCallback notify { get; set; }

    public LogInModel loginModel { get; set; }
    public string alertMessage { get; set; }

    protected override Task OnInitializedAsync()
    {
        loginModel = new LogInModel();
        return base.OnInitializedAsync();
    }
    private async Task Login_Click()
    {
        var responce = await userPanelService.LoginUser(loginModel);
        if (responce.Status)
        {
            var user_responce = responce.Message.Split("|");
            await sessionStorage.SetAsync("userKey", user_responce[0]);
            await sessionStorage.SetAsync("userName", user_responce[1]);
            await sessionStorage.SetAsync("userEmail", user_responce[2]);
            await notify.InvokeAsync();
            navManager.NavigateTo("/");
        }
        else
        {
            alertMessage = responce.Message;
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var login_session = await userPanelService.IsUserLoggedIn();
            if (login_session)
            {
                navManager.NavigateTo("/");
            }
            var checkout_session = await sessionStorage.GetAsync<string>("checkoutAlert");
            if (checkout_session.Success)
            {
                this.alertMessage = checkout_session.Value;
                StateHasChanged();
            }
        }

    }
}
